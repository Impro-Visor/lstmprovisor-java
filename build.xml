<project xmlns:ivy="antlib:org.apache.ivy.ant">

    
    <property name="lib.dir" value="./lib"/>
    
    <!-- ivy start -->
    <property name="ivy.install.version" value="2.1.0-rc2" />
    <condition property="ivy.home" value="${env.IVY_HOME}">
      <isset property="env.IVY_HOME" />
    </condition>
    <property name="ivy.home" value="${basedir}/.ant" />
    <property name="ivy.jar.dir" value="${ivy.home}/lib" />
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />
    <property name="ivy.settings.dir" value="." />
    <property name="apache.ant.ext.lib" value="{ivy.home}"/>
    
    <path id="ivy.classpath" path="${ivy.jar.file}" />
    <typedef resource="org/apache/ivy/ant/antlib.xml"
           uri="antlib:org.apache.ivy.ant"
           classpathref="ivy.classpath" />
    
    <target name="download-ivy" unless="offline">

        <mkdir dir="${ivy.jar.dir}"/>
        <!-- download Ivy from web site so that it can be used even without any special installation -->
        <get src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" 
             dest="${ivy.jar.file}" usetimestamp="true"/>
    </target>

    <target name="init-ivy" depends="download-ivy">
      <!-- try to load ivy here from ivy home, in case the user has not already dropped
              it into ant's lib dir (note that the latter copy will always take precedence).
              We will not fail as long as local lib dir exists (it may be empty) and
              ivy is in at least one of ant's lib dir or the local lib dir. -->
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>

        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml"
                 uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>
    
    <target name="convert-pom">
        <ivy:convertpom pomFile="pom.xml" ivyFile="ivy.xml" />
    </target>
    
    <!-- ivy to get dependencies and copy to project lib folder automatically -->
    <target name="resolve-deps" description="retrieve dependencies with ivy">
        <echo> Retrieving! ${ivy.settings.dir} </echo>
        <ivy:retrieve/>
    </target>
    <!-- ivy end -->
    
    <target name="clean">
        <delete dir="build"/>
        <delete dir="lib"/>
    </target>

    <path id="libs-classpath">
      <pathelement location="${basedir}/lib"/>
      <fileset dir="${basedir}/lib" includes="*.jar"/>
      <!--pathelement location="${basedir}/../rbm-provisor-code-1/dist"/>-->
      <!--fileset dir="${basedir}/../rbm-provisor-code-1/dist" includes="*.jar"/>-->
    </path>

    <target name="compile" depends="resolve-deps">
        <pathconvert property="classpathProp" refid="libs-classpath"/>
        <echo>Classpath is ${classpathProp}</echo>
        <mkdir dir="build/classes"/>
        <javac srcdir="src" destdir="build/classes" debug="true" includeantruntime="false" classpathref="libs-classpath"/>
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="build/jar"/>
        <jar destfile="build/jar/DeepDragonNN.jar" basedir="build/classes">
            <zipgroupfileset dir="${basedir}/lib" includes="*.jar" />
            <!--zipgroupfileset dir="${basedir}/../rbm-provisor-code-1/dist" includes="*.jar" />-->
            <manifest>
                <attribute name="Main-Class" value="main.Driver"/>
            </manifest>
        </jar>
    </target>

    <target name="run">
        <java jar="build/jar/DeepDragonNN.jar" fork="true" args="${basedir}/Inputs/0150.ls ${basedir}/Outputs ${basedir}/BrainData/CircleOfThirdsHideOutput ${basedir}/BrainData/corn_params"/>
        
    </target>

</project>